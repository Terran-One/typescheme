// Generated from ./grammar/TypeSchemeLexer.g4 by ANTLR 4.9.0-SNAPSHOT


import { ATN } from "antlr4ts/atn/ATN";
import { ATNDeserializer } from "antlr4ts/atn/ATNDeserializer";
import { CharStream } from "antlr4ts/CharStream";
import { Lexer } from "antlr4ts/Lexer";
import { LexerATNSimulator } from "antlr4ts/atn/LexerATNSimulator";
import { NotNull } from "antlr4ts/Decorators";
import { Override } from "antlr4ts/Decorators";
import { RuleContext } from "antlr4ts/RuleContext";
import { Vocabulary } from "antlr4ts/Vocabulary";
import { VocabularyImpl } from "antlr4ts/VocabularyImpl";

import * as Utils from "antlr4ts/misc/Utils";


export class TypeSchemeLexer extends Lexer {
	public static readonly BooleanLiteral = 1;
	public static readonly StringLiteral = 2;
	public static readonly SingleQuotedStringLiteral = 3;
	public static readonly DoubleQuotedStringLiteral = 4;
	public static readonly BacktickStringLiteral = 5;
	public static readonly EscapeSequence = 6;
	public static readonly UnicodeEscapeSequence = 7;
	public static readonly NumberLiteral = 8;
	public static readonly HexLiteral = 9;
	public static readonly OctalLiteral = 10;
	public static readonly BinaryLiteral = 11;
	public static readonly DecimalLiteral = 12;
	public static readonly LPAREN = 13;
	public static readonly RPAREN = 14;
	public static readonly LBRACE = 15;
	public static readonly RBRACE = 16;
	public static readonly LBRACK = 17;
	public static readonly RBRACK = 18;
	public static readonly LANGL = 19;
	public static readonly RANGL = 20;
	public static readonly COLON = 21;
	public static readonly COMMA = 22;
	public static readonly AMP = 23;
	public static readonly BAR = 24;
	public static readonly SPREAD = 25;
	public static readonly DOT = 26;
	public static readonly QUOTE = 27;
	public static readonly WS = 28;
	public static readonly KEYOF = 29;
	public static readonly INFER = 30;
	public static readonly IN = 31;
	public static readonly AS = 32;
	public static readonly EXTENDS = 33;
	public static readonly EXTENDS_Q = 34;
	public static readonly IN_Q = 35;
	public static readonly IF = 36;
	public static readonly NEVER = 37;
	public static readonly NULL = 38;
	public static readonly UNDEFINED = 39;
	public static readonly UNKNOWN = 40;
	public static readonly OBJECT = 41;
	public static readonly ANY = 42;
	public static readonly STRING = 43;
	public static readonly NUMBER = 44;
	public static readonly BOOLEAN = 45;
	public static readonly Identifier = 46;

	// tslint:disable:no-trailing-whitespace
	public static readonly channelNames: string[] = [
		"DEFAULT_TOKEN_CHANNEL", "HIDDEN",
	];

	// tslint:disable:no-trailing-whitespace
	public static readonly modeNames: string[] = [
		"DEFAULT_MODE",
	];

	public static readonly ruleNames: string[] = [
		"BooleanLiteral", "StringLiteral", "SingleQuotedStringLiteral", "DoubleQuotedStringLiteral", 
		"BacktickStringLiteral", "EscapeSequence", "UnicodeEscapeSequence", "NumberLiteral", 
		"HexLiteral", "OctalLiteral", "BinaryLiteral", "DecimalLiteral", "LPAREN", 
		"RPAREN", "LBRACE", "RBRACE", "LBRACK", "RBRACK", "LANGL", "RANGL", "COLON", 
		"COMMA", "AMP", "BAR", "SPREAD", "DOT", "QUOTE", "WS", "KEYOF", "INFER", 
		"IN", "AS", "EXTENDS", "EXTENDS_Q", "IN_Q", "IF", "NEVER", "NULL", "UNDEFINED", 
		"UNKNOWN", "OBJECT", "ANY", "STRING", "NUMBER", "BOOLEAN", "Identifier",
	];

	private static readonly _LITERAL_NAMES: Array<string | undefined> = [
		undefined, undefined, undefined, undefined, undefined, undefined, undefined, 
		undefined, undefined, undefined, undefined, undefined, undefined, "'('", 
		"')'", "'{'", "'}'", "'['", "']'", "'<'", "'>'", "':'", "','", "'&'", 
		"'|'", "'...'", "'.'", "'''", undefined, "'keyof'", "'infer'", "'in'", 
		"'as'", "'extends'", "'extends?'", "'in?'", "'if'", "'never'", "'null'", 
		"'undefined'", "'unknown'", "'object'", "'any'", "'string'", "'number'", 
		"'boolean'",
	];
	private static readonly _SYMBOLIC_NAMES: Array<string | undefined> = [
		undefined, "BooleanLiteral", "StringLiteral", "SingleQuotedStringLiteral", 
		"DoubleQuotedStringLiteral", "BacktickStringLiteral", "EscapeSequence", 
		"UnicodeEscapeSequence", "NumberLiteral", "HexLiteral", "OctalLiteral", 
		"BinaryLiteral", "DecimalLiteral", "LPAREN", "RPAREN", "LBRACE", "RBRACE", 
		"LBRACK", "RBRACK", "LANGL", "RANGL", "COLON", "COMMA", "AMP", "BAR", 
		"SPREAD", "DOT", "QUOTE", "WS", "KEYOF", "INFER", "IN", "AS", "EXTENDS", 
		"EXTENDS_Q", "IN_Q", "IF", "NEVER", "NULL", "UNDEFINED", "UNKNOWN", "OBJECT", 
		"ANY", "STRING", "NUMBER", "BOOLEAN", "Identifier",
	];
	public static readonly VOCABULARY: Vocabulary = new VocabularyImpl(TypeSchemeLexer._LITERAL_NAMES, TypeSchemeLexer._SYMBOLIC_NAMES, []);

	// @Override
	// @NotNull
	public get vocabulary(): Vocabulary {
		return TypeSchemeLexer.VOCABULARY;
	}
	// tslint:enable:no-trailing-whitespace


	constructor(input: CharStream) {
		super(input);
		this._interp = new LexerATNSimulator(TypeSchemeLexer._ATN, this);
	}

	// @Override
	public get grammarFileName(): string { return "TypeSchemeLexer.g4"; }

	// @Override
	public get ruleNames(): string[] { return TypeSchemeLexer.ruleNames; }

	// @Override
	public get serializedATN(): string { return TypeSchemeLexer._serializedATN; }

	// @Override
	public get channelNames(): string[] { return TypeSchemeLexer.channelNames; }

	// @Override
	public get modeNames(): string[] { return TypeSchemeLexer.modeNames; }

	public static readonly _serializedATN: string =
		"\x03\uC91D\uCABA\u058D\uAFBA\u4F53\u0607\uEA8B\uC241\x020\u0160\b\x01" +
		"\x04\x02\t\x02\x04\x03\t\x03\x04\x04\t\x04\x04\x05\t\x05\x04\x06\t\x06" +
		"\x04\x07\t\x07\x04\b\t\b\x04\t\t\t\x04\n\t\n\x04\v\t\v\x04\f\t\f\x04\r" +
		"\t\r\x04\x0E\t\x0E\x04\x0F\t\x0F\x04\x10\t\x10\x04\x11\t\x11\x04\x12\t" +
		"\x12\x04\x13\t\x13\x04\x14\t\x14\x04\x15\t\x15\x04\x16\t\x16\x04\x17\t" +
		"\x17\x04\x18\t\x18\x04\x19\t\x19\x04\x1A\t\x1A\x04\x1B\t\x1B\x04\x1C\t" +
		"\x1C\x04\x1D\t\x1D\x04\x1E\t\x1E\x04\x1F\t\x1F\x04 \t \x04!\t!\x04\"\t" +
		"\"\x04#\t#\x04$\t$\x04%\t%\x04&\t&\x04\'\t\'\x04(\t(\x04)\t)\x04*\t*\x04" +
		"+\t+\x04,\t,\x04-\t-\x04.\t.\x04/\t/\x03\x02\x03\x02\x03\x02\x03\x02\x03" +
		"\x02\x03\x02\x03\x02\x03\x02\x03\x02\x05\x02i\n\x02\x03\x03\x03\x03\x03" +
		"\x03\x05\x03n\n\x03\x03\x04\x03\x04\x03\x04\x07\x04s\n\x04\f\x04\x0E\x04" +
		"v\v\x04\x03\x04\x03\x04\x03\x05\x03\x05\x03\x05\x07\x05}\n\x05\f\x05\x0E" +
		"\x05\x80\v\x05\x03\x05\x03\x05\x03\x06\x03\x06\x03\x06\x07\x06\x87\n\x06" +
		"\f\x06\x0E\x06\x8A\v\x06\x03\x06\x03\x06\x03\x07\x03\x07\x03\x07\x05\x07" +
		"\x91\n\x07\x03\b\x03\b\x03\b\x03\b\x03\b\x03\b\x03\t\x03\t\x03\t\x03\t" +
		"\x05\t\x9D\n\t\x03\n\x03\n\x03\n\x06\n\xA2\n\n\r\n\x0E\n\xA3\x03\v\x03" +
		"\v\x03\v\x06\v\xA9\n\v\r\v\x0E\v\xAA\x03\f\x03\f\x03\f\x06\f\xB0\n\f\r" +
		"\f\x0E\f\xB1\x03\r\x06\r\xB5\n\r\r\r\x0E\r\xB6\x03\r\x03\r\x06\r\xBB\n" +
		"\r\r\r\x0E\r\xBC\x05\r\xBF\n\r\x03\x0E\x03\x0E\x03\x0F\x03\x0F\x03\x10" +
		"\x03\x10\x03\x11\x03\x11\x03\x12\x03\x12\x03\x13\x03\x13\x03\x14\x03\x14" +
		"\x03\x15\x03\x15\x03\x16\x03\x16\x03\x17\x03\x17\x03\x18\x03\x18\x03\x19" +
		"\x03\x19\x03\x1A\x03\x1A\x03\x1A\x03\x1A\x03\x1B\x03\x1B\x03\x1C\x03\x1C" +
		"\x03\x1D\x06\x1D\xE2\n\x1D\r\x1D\x0E\x1D\xE3\x03\x1D\x05\x1D\xE7\n\x1D" +
		"\x03\x1E\x03\x1E\x03\x1E\x03\x1E\x03\x1E\x03\x1E\x03\x1F\x03\x1F\x03\x1F" +
		"\x03\x1F\x03\x1F\x03\x1F\x03 \x03 \x03 \x03!\x03!\x03!\x03\"\x03\"\x03" +
		"\"\x03\"\x03\"\x03\"\x03\"\x03\"\x03#\x03#\x03#\x03#\x03#\x03#\x03#\x03" +
		"#\x03#\x03$\x03$\x03$\x03$\x03%\x03%\x03%\x03&\x03&\x03&\x03&\x03&\x03" +
		"&\x03\'\x03\'\x03\'\x03\'\x03\'\x03(\x03(\x03(\x03(\x03(\x03(\x03(\x03" +
		"(\x03(\x03(\x03)\x03)\x03)\x03)\x03)\x03)\x03)\x03)\x03*\x03*\x03*\x03" +
		"*\x03*\x03*\x03*\x03+\x03+\x03+\x03+\x03,\x03,\x03,\x03,\x03,\x03,\x03" +
		",\x03-\x03-\x03-\x03-\x03-\x03-\x03-\x03.\x03.\x03.\x03.\x03.\x03.\x03" +
		".\x03.\x03/\x03/\x07/\u0153\n/\f/\x0E/\u0156\v/\x03/\x05/\u0159\n/\x03" +
		"/\x03/\x03/\x03/\x05/\u015F\n/\x02\x02\x020\x03\x02\x03\x05\x02\x04\x07" +
		"\x02\x05\t\x02\x06\v\x02\x07\r\x02\b\x0F\x02\t\x11\x02\n\x13\x02\v\x15" +
		"\x02\f\x17\x02\r\x19\x02\x0E\x1B\x02\x0F\x1D\x02\x10\x1F\x02\x11!\x02" +
		"\x12#\x02\x13%\x02\x14\'\x02\x15)\x02\x16+\x02\x17-\x02\x18/\x02\x191" +
		"\x02\x1A3\x02\x1B5\x02\x1C7\x02\x1D9\x02\x1E;\x02\x1F=\x02 ?\x02!A\x02" +
		"\"C\x02#E\x02$G\x02%I\x02&K\x02\'M\x02(O\x02)Q\x02*S\x02+U\x02,W\x02-" +
		"Y\x02.[\x02/]\x020\x03\x02\r\x07\x02\f\f\x0F\x0F$$))^^\n\x02$$11^^ddh" +
		"hppttvv\x04\x02ZZzz\x05\x022;CHch\x04\x02QQqq\x03\x022;\x04\x02DDdd\x03" +
		"\x0223\x05\x02\v\f\x0F\x0F\"\"\x06\x02&&C\\aac|\x07\x02&&2;C\\aac|\x02" +
		"\u0178\x02\x03\x03\x02\x02\x02\x02\x05\x03\x02\x02\x02\x02\x07\x03\x02" +
		"\x02\x02\x02\t\x03\x02\x02\x02\x02\v\x03\x02\x02\x02\x02\r\x03\x02\x02" +
		"\x02\x02\x0F\x03\x02\x02\x02\x02\x11\x03\x02\x02\x02\x02\x13\x03\x02\x02" +
		"\x02\x02\x15\x03\x02\x02\x02\x02\x17\x03\x02\x02\x02\x02\x19\x03\x02\x02" +
		"\x02\x02\x1B\x03\x02\x02\x02\x02\x1D\x03\x02\x02\x02\x02\x1F\x03\x02\x02" +
		"\x02\x02!\x03\x02\x02\x02\x02#\x03\x02\x02\x02\x02%\x03\x02\x02\x02\x02" +
		"\'\x03\x02\x02\x02\x02)\x03\x02\x02\x02\x02+\x03\x02\x02\x02\x02-\x03" +
		"\x02\x02\x02\x02/\x03\x02\x02\x02\x021\x03\x02\x02\x02\x023\x03\x02\x02" +
		"\x02\x025\x03\x02\x02\x02\x027\x03\x02\x02\x02\x029\x03\x02\x02\x02\x02" +
		";\x03\x02\x02\x02\x02=\x03\x02\x02\x02\x02?\x03\x02\x02\x02\x02A\x03\x02" +
		"\x02\x02\x02C\x03\x02\x02\x02\x02E\x03\x02\x02\x02\x02G\x03\x02\x02\x02" +
		"\x02I\x03\x02\x02\x02\x02K\x03\x02\x02\x02\x02M\x03\x02\x02\x02\x02O\x03" +
		"\x02\x02\x02\x02Q\x03\x02\x02\x02\x02S\x03\x02\x02\x02\x02U\x03\x02\x02" +
		"\x02\x02W\x03\x02\x02\x02\x02Y\x03\x02\x02\x02\x02[\x03\x02\x02\x02\x02" +
		"]\x03\x02\x02\x02\x03h\x03\x02\x02\x02\x05m\x03\x02\x02\x02\x07o\x03\x02" +
		"\x02\x02\ty\x03\x02\x02\x02\v\x83\x03\x02\x02\x02\r\x8D\x03\x02\x02\x02" +
		"\x0F\x92\x03\x02\x02\x02\x11\x9C\x03\x02\x02\x02\x13\x9E\x03\x02\x02\x02" +
		"\x15\xA5\x03\x02\x02\x02\x17\xAC\x03\x02\x02\x02\x19\xB4\x03\x02\x02\x02" +
		"\x1B\xC0\x03\x02\x02\x02\x1D\xC2\x03\x02\x02\x02\x1F\xC4\x03\x02\x02\x02" +
		"!\xC6\x03\x02\x02\x02#\xC8\x03\x02\x02\x02%\xCA\x03\x02\x02\x02\'\xCC" +
		"\x03\x02\x02\x02)\xCE\x03\x02\x02\x02+\xD0\x03\x02\x02\x02-\xD2\x03\x02" +
		"\x02\x02/\xD4\x03\x02\x02\x021\xD6\x03\x02\x02\x023\xD8\x03\x02\x02\x02" +
		"5\xDC\x03\x02\x02\x027\xDE\x03\x02\x02\x029\xE6\x03\x02\x02\x02;\xE8\x03" +
		"\x02\x02\x02=\xEE\x03\x02\x02\x02?\xF4\x03\x02\x02\x02A\xF7\x03\x02\x02" +
		"\x02C\xFA\x03\x02\x02\x02E\u0102\x03\x02\x02\x02G\u010B\x03\x02\x02\x02" +
		"I\u010F\x03\x02\x02\x02K\u0112\x03\x02\x02\x02M\u0118\x03\x02\x02\x02" +
		"O\u011D\x03\x02\x02\x02Q\u0127\x03\x02\x02\x02S\u012F\x03\x02\x02\x02" +
		"U\u0136\x03\x02\x02\x02W\u013A\x03\x02\x02\x02Y\u0141\x03\x02\x02\x02" +
		"[\u0148\x03\x02\x02\x02]\u015E\x03\x02\x02\x02_`\x07v\x02\x02`a\x07t\x02" +
		"\x02ab\x07w\x02\x02bi\x07g\x02\x02cd\x07h\x02\x02de\x07c\x02\x02ef\x07" +
		"n\x02\x02fg\x07u\x02\x02gi\x07g\x02\x02h_\x03\x02\x02\x02hc\x03\x02\x02" +
		"\x02i\x04\x03\x02\x02\x02jn\x05\x07\x04\x02kn\x05\t\x05\x02ln\x05\v\x06" +
		"\x02mj\x03\x02\x02\x02mk\x03\x02\x02\x02ml\x03\x02\x02\x02n\x06\x03\x02" +
		"\x02\x02ot\x057\x1C\x02ps\x05\r\x07\x02qs\n\x02\x02\x02rp\x03\x02\x02" +
		"\x02rq\x03\x02\x02\x02sv\x03\x02\x02\x02tr\x03\x02\x02\x02tu\x03\x02\x02" +
		"\x02uw\x03\x02\x02\x02vt\x03\x02\x02\x02wx\x057\x1C\x02x\b\x03\x02\x02" +
		"\x02y~\x07$\x02\x02z}\x05\r\x07\x02{}\n\x02\x02\x02|z\x03\x02\x02\x02" +
		"|{\x03\x02\x02\x02}\x80\x03\x02\x02\x02~|\x03\x02\x02\x02~\x7F\x03\x02" +
		"\x02\x02\x7F\x81\x03\x02\x02\x02\x80~\x03\x02\x02\x02\x81\x82\x07$\x02" +
		"\x02\x82\n\x03\x02\x02\x02\x83\x88\x07b\x02\x02\x84\x87\x05\r\x07\x02" +
		"\x85\x87\n\x02\x02\x02\x86\x84\x03\x02\x02\x02\x86\x85\x03\x02\x02\x02" +
		"\x87\x8A\x03\x02\x02\x02\x88\x86\x03\x02\x02\x02\x88\x89\x03\x02\x02\x02" +
		"\x89\x8B\x03\x02\x02\x02\x8A\x88\x03\x02\x02\x02\x8B\x8C\x07b\x02\x02" +
		"\x8C\f\x03\x02\x02\x02\x8D\x90\x07^\x02\x02\x8E\x91\t\x03\x02\x02\x8F" +
		"\x91\x05\x0F\b\x02\x90\x8E\x03\x02\x02\x02\x90\x8F\x03\x02\x02\x02\x91" +
		"\x0E\x03\x02\x02\x02\x92\x93\x07w\x02\x02\x93\x94\x05\x13\n\x02\x94\x95" +
		"\x05\x13\n\x02\x95\x96\x05\x13\n\x02\x96\x97\x05\x13\n\x02\x97\x10\x03" +
		"\x02\x02\x02\x98\x9D\x05\x19\r\x02\x99\x9D\x05\x13\n\x02\x9A\x9D\x05\x15" +
		"\v\x02\x9B\x9D\x05\x17\f\x02\x9C\x98\x03\x02\x02\x02\x9C\x99\x03\x02\x02" +
		"\x02\x9C\x9A\x03\x02\x02\x02\x9C\x9B\x03\x02\x02\x02\x9D\x12\x03\x02\x02" +
		"\x02\x9E\x9F\x072\x02\x02\x9F\xA1\t\x04\x02\x02\xA0\xA2\t\x05\x02\x02" +
		"\xA1\xA0\x03\x02\x02\x02\xA2\xA3\x03\x02\x02\x02\xA3\xA1\x03\x02\x02\x02" +
		"\xA3\xA4\x03\x02\x02\x02\xA4\x14\x03\x02\x02\x02\xA5\xA6\x072\x02\x02" +
		"\xA6\xA8\t\x06\x02\x02\xA7\xA9\t\x07\x02\x02\xA8\xA7\x03\x02\x02\x02\xA9" +
		"\xAA\x03\x02\x02\x02\xAA\xA8\x03\x02\x02\x02\xAA\xAB\x03\x02\x02\x02\xAB" +
		"\x16\x03\x02\x02\x02\xAC\xAD\x072\x02\x02\xAD\xAF\t\b\x02\x02\xAE\xB0" +
		"\t\t\x02\x02\xAF\xAE\x03\x02\x02\x02\xB0\xB1\x03\x02\x02\x02\xB1\xAF\x03" +
		"\x02\x02\x02\xB1\xB2\x03\x02\x02\x02\xB2\x18\x03\x02\x02\x02\xB3\xB5\t" +
		"\x07\x02\x02\xB4\xB3\x03\x02\x02\x02\xB5\xB6\x03\x02\x02\x02\xB6\xB4\x03" +
		"\x02\x02\x02\xB6\xB7\x03\x02\x02\x02\xB7\xBE\x03\x02\x02\x02\xB8\xBA\x07" +
		"0\x02\x02\xB9\xBB\t\x07\x02\x02\xBA\xB9\x03\x02\x02\x02\xBB\xBC\x03\x02" +
		"\x02\x02\xBC\xBA\x03\x02\x02\x02\xBC\xBD\x03\x02\x02\x02\xBD\xBF\x03\x02" +
		"\x02\x02\xBE\xB8\x03\x02\x02\x02\xBE\xBF\x03\x02\x02\x02\xBF\x1A\x03\x02" +
		"\x02\x02\xC0\xC1\x07*\x02\x02\xC1\x1C\x03\x02\x02\x02\xC2\xC3\x07+\x02" +
		"\x02\xC3\x1E\x03\x02\x02\x02\xC4\xC5\x07}\x02\x02\xC5 \x03\x02\x02\x02" +
		"\xC6\xC7\x07\x7F\x02\x02\xC7\"\x03\x02\x02\x02\xC8\xC9\x07]\x02\x02\xC9" +
		"$\x03\x02\x02\x02\xCA\xCB\x07_\x02\x02\xCB&\x03\x02\x02\x02\xCC\xCD\x07" +
		">\x02\x02\xCD(\x03\x02\x02\x02\xCE\xCF\x07@\x02\x02\xCF*\x03\x02\x02\x02" +
		"\xD0\xD1\x07<\x02\x02\xD1,\x03\x02\x02\x02\xD2\xD3\x07.\x02\x02\xD3.\x03" +
		"\x02\x02\x02\xD4\xD5\x07(\x02\x02\xD50\x03\x02\x02\x02\xD6\xD7\x07~\x02" +
		"\x02\xD72\x03\x02\x02\x02\xD8\xD9\x070\x02\x02\xD9\xDA\x070\x02\x02\xDA" +
		"\xDB\x070\x02\x02\xDB4\x03\x02\x02\x02\xDC\xDD\x070\x02\x02\xDD6\x03\x02" +
		"\x02\x02\xDE\xDF\x07)\x02\x02\xDF8\x03\x02\x02\x02\xE0\xE2\t\n\x02\x02" +
		"\xE1\xE0\x03\x02\x02\x02\xE2\xE3\x03\x02\x02\x02\xE3\xE1\x03\x02\x02\x02" +
		"\xE3\xE4\x03\x02\x02\x02\xE4\xE7\x03\x02\x02\x02\xE5\xE7\x07\x02\x02\x03" +
		"\xE6\xE1\x03\x02\x02\x02\xE6\xE5\x03\x02\x02\x02\xE7:\x03\x02\x02\x02" +
		"\xE8\xE9\x07m\x02\x02\xE9\xEA\x07g\x02\x02\xEA\xEB\x07{\x02\x02\xEB\xEC" +
		"\x07q\x02\x02\xEC\xED\x07h\x02\x02\xED<\x03\x02\x02\x02\xEE\xEF\x07k\x02" +
		"\x02\xEF\xF0\x07p\x02\x02\xF0\xF1\x07h\x02\x02\xF1\xF2\x07g\x02\x02\xF2" +
		"\xF3\x07t\x02\x02\xF3>\x03\x02\x02\x02\xF4\xF5\x07k\x02\x02\xF5\xF6\x07" +
		"p\x02\x02\xF6@\x03\x02\x02\x02\xF7\xF8\x07c\x02\x02\xF8\xF9\x07u\x02\x02" +
		"\xF9B\x03\x02\x02\x02\xFA\xFB\x07g\x02\x02\xFB\xFC\x07z\x02\x02\xFC\xFD" +
		"\x07v\x02\x02\xFD\xFE\x07g\x02\x02\xFE\xFF\x07p\x02\x02\xFF\u0100\x07" +
		"f\x02\x02\u0100\u0101\x07u\x02\x02\u0101D\x03\x02\x02\x02\u0102\u0103" +
		"\x07g\x02\x02\u0103\u0104\x07z\x02\x02\u0104\u0105\x07v\x02\x02\u0105" +
		"\u0106\x07g\x02\x02\u0106\u0107\x07p\x02\x02\u0107\u0108\x07f\x02\x02" +
		"\u0108\u0109\x07u\x02\x02\u0109\u010A\x07A\x02\x02\u010AF\x03\x02\x02" +
		"\x02\u010B\u010C\x07k\x02\x02\u010C\u010D\x07p\x02\x02\u010D\u010E\x07" +
		"A\x02\x02\u010EH\x03\x02\x02\x02\u010F\u0110\x07k\x02\x02\u0110\u0111" +
		"\x07h\x02\x02\u0111J\x03\x02\x02\x02\u0112\u0113\x07p\x02\x02\u0113\u0114" +
		"\x07g\x02\x02\u0114\u0115\x07x\x02\x02\u0115\u0116\x07g\x02\x02\u0116" +
		"\u0117\x07t\x02\x02\u0117L\x03\x02\x02\x02\u0118\u0119\x07p\x02\x02\u0119" +
		"\u011A\x07w\x02\x02\u011A\u011B\x07n\x02\x02\u011B\u011C\x07n\x02\x02" +
		"\u011CN\x03\x02\x02\x02\u011D\u011E\x07w\x02\x02\u011E\u011F\x07p\x02" +
		"\x02\u011F\u0120\x07f\x02\x02\u0120\u0121\x07g\x02\x02\u0121\u0122\x07" +
		"h\x02\x02\u0122\u0123\x07k\x02\x02\u0123\u0124\x07p\x02\x02\u0124\u0125" +
		"\x07g\x02\x02\u0125\u0126\x07f\x02\x02\u0126P\x03\x02\x02\x02\u0127\u0128" +
		"\x07w\x02\x02\u0128\u0129\x07p\x02\x02\u0129\u012A\x07m\x02\x02\u012A" +
		"\u012B\x07p\x02\x02\u012B\u012C\x07q\x02\x02\u012C\u012D\x07y\x02\x02" +
		"\u012D\u012E\x07p\x02\x02\u012ER\x03\x02\x02\x02\u012F\u0130\x07q\x02" +
		"\x02\u0130\u0131\x07d\x02\x02\u0131\u0132\x07l\x02\x02\u0132\u0133\x07" +
		"g\x02\x02\u0133\u0134\x07e\x02\x02\u0134\u0135\x07v\x02\x02\u0135T\x03" +
		"\x02\x02\x02\u0136\u0137\x07c\x02\x02\u0137\u0138\x07p\x02\x02\u0138\u0139" +
		"\x07{\x02\x02\u0139V\x03\x02\x02\x02\u013A\u013B\x07u\x02\x02\u013B\u013C" +
		"\x07v\x02\x02\u013C\u013D\x07t\x02\x02\u013D\u013E\x07k\x02\x02\u013E" +
		"\u013F\x07p\x02\x02\u013F\u0140\x07i\x02\x02\u0140X\x03\x02\x02\x02\u0141" +
		"\u0142\x07p\x02\x02\u0142\u0143\x07w\x02\x02\u0143\u0144\x07o\x02\x02" +
		"\u0144\u0145\x07d\x02\x02\u0145\u0146\x07g\x02\x02\u0146\u0147\x07t\x02" +
		"\x02\u0147Z\x03\x02\x02\x02\u0148\u0149\x07d\x02\x02\u0149\u014A\x07q" +
		"\x02\x02\u014A\u014B\x07q\x02\x02\u014B\u014C\x07n\x02\x02\u014C\u014D" +
		"\x07g\x02\x02\u014D\u014E\x07c\x02\x02\u014E\u014F\x07p\x02\x02\u014F" +
		"\\\x03\x02\x02\x02\u0150\u0154\t\v\x02\x02\u0151\u0153\t\f\x02\x02\u0152" +
		"\u0151\x03\x02\x02\x02\u0153\u0156\x03\x02\x02\x02\u0154\u0152\x03\x02" +
		"\x02\x02\u0154\u0155\x03\x02\x02\x02\u0155\u0158\x03\x02\x02\x02\u0156" +
		"\u0154\x03\x02\x02\x02\u0157\u0159\x07A\x02\x02\u0158\u0157\x03\x02\x02" +
		"\x02\u0158\u0159\x03\x02\x02\x02\u0159\u015F\x03\x02\x02\x02\u015A\u015B" +
		"\x07?\x02\x02\u015B\u015F\x07A\x02\x02\u015C\u015D\x07A\x02\x02\u015D" +
		"\u015F\x07?\x02\x02\u015E\u0150\x03\x02\x02\x02\u015E\u015A\x03\x02\x02" +
		"\x02\u015E\u015C\x03\x02\x02\x02\u015F^\x03\x02\x02\x02\x18\x02hmrt|~" +
		"\x86\x88\x90\x9C\xA3\xAA\xB1\xB6\xBC\xBE\xE3\xE6\u0154\u0158\u015E\x02";
	public static __ATN: ATN;
	public static get _ATN(): ATN {
		if (!TypeSchemeLexer.__ATN) {
			TypeSchemeLexer.__ATN = new ATNDeserializer().deserialize(Utils.toCharArray(TypeSchemeLexer._serializedATN));
		}

		return TypeSchemeLexer.__ATN;
	}

}

