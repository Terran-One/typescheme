// Generated from ./grammar/TypeSchemeLexer.g4 by ANTLR 4.9.0-SNAPSHOT


import { ATN } from "antlr4ts/atn/ATN";
import { ATNDeserializer } from "antlr4ts/atn/ATNDeserializer";
import { CharStream } from "antlr4ts/CharStream";
import { Lexer } from "antlr4ts/Lexer";
import { LexerATNSimulator } from "antlr4ts/atn/LexerATNSimulator";
import { NotNull } from "antlr4ts/Decorators";
import { Override } from "antlr4ts/Decorators";
import { RuleContext } from "antlr4ts/RuleContext";
import { Vocabulary } from "antlr4ts/Vocabulary";
import { VocabularyImpl } from "antlr4ts/VocabularyImpl";

import * as Utils from "antlr4ts/misc/Utils";


export class TypeSchemeLexer extends Lexer {
	public static readonly LPAREN = 1;
	public static readonly RPAREN = 2;
	public static readonly LBRACE = 3;
	public static readonly RBRACE = 4;
	public static readonly LBRACK = 5;
	public static readonly RBRACK = 6;
	public static readonly LANGL = 7;
	public static readonly RANGL = 8;
	public static readonly COLON = 9;
	public static readonly COMMA = 10;
	public static readonly AMP = 11;
	public static readonly BAR = 12;
	public static readonly SPREAD = 13;
	public static readonly DOT = 14;
	public static readonly QUOTE = 15;
	public static readonly WS = 16;
	public static readonly KEYOF = 17;
	public static readonly INFER = 18;
	public static readonly IN = 19;
	public static readonly AS = 20;
	public static readonly EXTENDS = 21;
	public static readonly EXTENDS_Q = 22;
	public static readonly IN_Q = 23;
	public static readonly IF = 24;
	public static readonly NEVER = 25;
	public static readonly NULL = 26;
	public static readonly UNDEFINED = 27;
	public static readonly UNKNOWN = 28;
	public static readonly OBJECT = 29;
	public static readonly ANY = 30;
	public static readonly STRING = 31;
	public static readonly NUMBER = 32;
	public static readonly BOOLEAN = 33;
	public static readonly BooleanLiteral = 34;
	public static readonly StringLiteral = 35;
	public static readonly SingleQuotedStringLiteral = 36;
	public static readonly DoubleQuotedStringLiteral = 37;
	public static readonly BacktickStringLiteral = 38;
	public static readonly EscapeSequence = 39;
	public static readonly UnicodeEscapeSequence = 40;
	public static readonly NumberLiteral = 41;
	public static readonly HexLiteral = 42;
	public static readonly OctalLiteral = 43;
	public static readonly BinaryLiteral = 44;
	public static readonly DecimalLiteral = 45;
	public static readonly Identifier = 46;

	// tslint:disable:no-trailing-whitespace
	public static readonly channelNames: string[] = [
		"DEFAULT_TOKEN_CHANNEL", "HIDDEN",
	];

	// tslint:disable:no-trailing-whitespace
	public static readonly modeNames: string[] = [
		"DEFAULT_MODE",
	];

	public static readonly ruleNames: string[] = [
		"LPAREN", "RPAREN", "LBRACE", "RBRACE", "LBRACK", "RBRACK", "LANGL", "RANGL", 
		"COLON", "COMMA", "AMP", "BAR", "SPREAD", "DOT", "QUOTE", "WS", "KEYOF", 
		"INFER", "IN", "AS", "EXTENDS", "EXTENDS_Q", "IN_Q", "IF", "NEVER", "NULL", 
		"UNDEFINED", "UNKNOWN", "OBJECT", "ANY", "STRING", "NUMBER", "BOOLEAN", 
		"BooleanLiteral", "StringLiteral", "SingleQuotedStringLiteral", "DoubleQuotedStringLiteral", 
		"BacktickStringLiteral", "EscapeSequence", "UnicodeEscapeSequence", "NumberLiteral", 
		"HexLiteral", "OctalLiteral", "BinaryLiteral", "DecimalLiteral", "Identifier",
	];

	private static readonly _LITERAL_NAMES: Array<string | undefined> = [
		undefined, "'('", "')'", "'{'", "'}'", "'['", "']'", "'<'", "'>'", "':'", 
		"','", "'&'", "'|'", "'...'", "'.'", "'''", undefined, "'keyof'", "'infer'", 
		"'in'", "'as'", "'extends'", "'extends?'", "'in?'", "'if'", "'never'", 
		"'null'", "'undefined'", "'unknown'", "'object'", "'any'", "'string'", 
		"'number'", "'boolean'",
	];
	private static readonly _SYMBOLIC_NAMES: Array<string | undefined> = [
		undefined, "LPAREN", "RPAREN", "LBRACE", "RBRACE", "LBRACK", "RBRACK", 
		"LANGL", "RANGL", "COLON", "COMMA", "AMP", "BAR", "SPREAD", "DOT", "QUOTE", 
		"WS", "KEYOF", "INFER", "IN", "AS", "EXTENDS", "EXTENDS_Q", "IN_Q", "IF", 
		"NEVER", "NULL", "UNDEFINED", "UNKNOWN", "OBJECT", "ANY", "STRING", "NUMBER", 
		"BOOLEAN", "BooleanLiteral", "StringLiteral", "SingleQuotedStringLiteral", 
		"DoubleQuotedStringLiteral", "BacktickStringLiteral", "EscapeSequence", 
		"UnicodeEscapeSequence", "NumberLiteral", "HexLiteral", "OctalLiteral", 
		"BinaryLiteral", "DecimalLiteral", "Identifier",
	];
	public static readonly VOCABULARY: Vocabulary = new VocabularyImpl(TypeSchemeLexer._LITERAL_NAMES, TypeSchemeLexer._SYMBOLIC_NAMES, []);

	// @Override
	// @NotNull
	public get vocabulary(): Vocabulary {
		return TypeSchemeLexer.VOCABULARY;
	}
	// tslint:enable:no-trailing-whitespace


	constructor(input: CharStream) {
		super(input);
		this._interp = new LexerATNSimulator(TypeSchemeLexer._ATN, this);
	}

	// @Override
	public get grammarFileName(): string { return "TypeSchemeLexer.g4"; }

	// @Override
	public get ruleNames(): string[] { return TypeSchemeLexer.ruleNames; }

	// @Override
	public get serializedATN(): string { return TypeSchemeLexer._serializedATN; }

	// @Override
	public get channelNames(): string[] { return TypeSchemeLexer.channelNames; }

	// @Override
	public get modeNames(): string[] { return TypeSchemeLexer.modeNames; }

	public static readonly _serializedATN: string =
		"\x03\uC91D\uCABA\u058D\uAFBA\u4F53\u0607\uEA8B\uC241\x020\u0160\b\x01" +
		"\x04\x02\t\x02\x04\x03\t\x03\x04\x04\t\x04\x04\x05\t\x05\x04\x06\t\x06" +
		"\x04\x07\t\x07\x04\b\t\b\x04\t\t\t\x04\n\t\n\x04\v\t\v\x04\f\t\f\x04\r" +
		"\t\r\x04\x0E\t\x0E\x04\x0F\t\x0F\x04\x10\t\x10\x04\x11\t\x11\x04\x12\t" +
		"\x12\x04\x13\t\x13\x04\x14\t\x14\x04\x15\t\x15\x04\x16\t\x16\x04\x17\t" +
		"\x17\x04\x18\t\x18\x04\x19\t\x19\x04\x1A\t\x1A\x04\x1B\t\x1B\x04\x1C\t" +
		"\x1C\x04\x1D\t\x1D\x04\x1E\t\x1E\x04\x1F\t\x1F\x04 \t \x04!\t!\x04\"\t" +
		"\"\x04#\t#\x04$\t$\x04%\t%\x04&\t&\x04\'\t\'\x04(\t(\x04)\t)\x04*\t*\x04" +
		"+\t+\x04,\t,\x04-\t-\x04.\t.\x04/\t/\x03\x02\x03\x02\x03\x03\x03\x03\x03" +
		"\x04\x03\x04\x03\x05\x03\x05\x03\x06\x03\x06\x03\x07\x03\x07\x03\b\x03" +
		"\b\x03\t\x03\t\x03\n\x03\n\x03\v\x03\v\x03\f\x03\f\x03\r\x03\r\x03\x0E" +
		"\x03\x0E\x03\x0E\x03\x0E\x03\x0F\x03\x0F\x03\x10\x03\x10\x03\x11\x06\x11" +
		"\x81\n\x11\r\x11\x0E\x11\x82\x03\x11\x05\x11\x86\n\x11\x03\x12\x03\x12" +
		"\x03\x12\x03\x12\x03\x12\x03\x12\x03\x13\x03\x13\x03\x13\x03\x13\x03\x13" +
		"\x03\x13\x03\x14\x03\x14\x03\x14\x03\x15\x03\x15\x03\x15\x03\x16\x03\x16" +
		"\x03\x16\x03\x16\x03\x16\x03\x16\x03\x16\x03\x16\x03\x17\x03\x17\x03\x17" +
		"\x03\x17\x03\x17\x03\x17\x03\x17\x03\x17\x03\x17\x03\x18\x03\x18\x03\x18" +
		"\x03\x18\x03\x19\x03\x19\x03\x19\x03\x1A\x03\x1A\x03\x1A\x03\x1A\x03\x1A" +
		"\x03\x1A\x03\x1B\x03\x1B\x03\x1B\x03\x1B\x03\x1B\x03\x1C\x03\x1C\x03\x1C" +
		"\x03\x1C\x03\x1C\x03\x1C\x03\x1C\x03\x1C\x03\x1C\x03\x1C\x03\x1D\x03\x1D" +
		"\x03\x1D\x03\x1D\x03\x1D\x03\x1D\x03\x1D\x03\x1D\x03\x1E\x03\x1E\x03\x1E" +
		"\x03\x1E\x03\x1E\x03\x1E\x03\x1E\x03\x1F\x03\x1F\x03\x1F\x03\x1F\x03 " +
		"\x03 \x03 \x03 \x03 \x03 \x03 \x03!\x03!\x03!\x03!\x03!\x03!\x03!\x03" +
		"\"\x03\"\x03\"\x03\"\x03\"\x03\"\x03\"\x03\"\x03#\x03#\x03#\x03#\x03#" +
		"\x03#\x03#\x03#\x03#\x05#\xF9\n#\x03$\x03$\x03$\x05$\xFE\n$\x03%\x03%" +
		"\x03%\x07%\u0103\n%\f%\x0E%\u0106\v%\x03%\x03%\x03&\x03&\x03&\x07&\u010D" +
		"\n&\f&\x0E&\u0110\v&\x03&\x03&\x03\'\x03\'\x03\'\x07\'\u0117\n\'\f\'\x0E" +
		"\'\u011A\v\'\x03\'\x03\'\x03(\x03(\x03(\x05(\u0121\n(\x03)\x03)\x03)\x03" +
		")\x03)\x03)\x03*\x03*\x03*\x03*\x05*\u012D\n*\x03+\x03+\x03+\x06+\u0132" +
		"\n+\r+\x0E+\u0133\x03,\x03,\x03,\x06,\u0139\n,\r,\x0E,\u013A\x03-\x03" +
		"-\x03-\x06-\u0140\n-\r-\x0E-\u0141\x03.\x06.\u0145\n.\r.\x0E.\u0146\x03" +
		".\x03.\x06.\u014B\n.\r.\x0E.\u014C\x05.\u014F\n.\x03/\x03/\x07/\u0153" +
		"\n/\f/\x0E/\u0156\v/\x03/\x05/\u0159\n/\x03/\x03/\x03/\x03/\x05/\u015F" +
		"\n/\x02\x02\x020\x03\x02\x03\x05\x02\x04\x07\x02\x05\t\x02\x06\v\x02\x07" +
		"\r\x02\b\x0F\x02\t\x11\x02\n\x13\x02\v\x15\x02\f\x17\x02\r\x19\x02\x0E" +
		"\x1B\x02\x0F\x1D\x02\x10\x1F\x02\x11!\x02\x12#\x02\x13%\x02\x14\'\x02" +
		"\x15)\x02\x16+\x02\x17-\x02\x18/\x02\x191\x02\x1A3\x02\x1B5\x02\x1C7\x02" +
		"\x1D9\x02\x1E;\x02\x1F=\x02 ?\x02!A\x02\"C\x02#E\x02$G\x02%I\x02&K\x02" +
		"\'M\x02(O\x02)Q\x02*S\x02+U\x02,W\x02-Y\x02.[\x02/]\x020\x03\x02\r\x05" +
		"\x02\v\f\x0F\x0F\"\"\x05\x02$$))^^\n\x02$$11^^ddhhppttvv\x04\x02ZZzz\x05" +
		"\x022;CHch\x04\x02QQqq\x03\x022;\x04\x02DDdd\x03\x0223\x06\x02&&C\\aa" +
		"c|\x07\x02&&2;C\\aac|\x02\u0178\x02\x03\x03\x02\x02\x02\x02\x05\x03\x02" +
		"\x02\x02\x02\x07\x03\x02\x02\x02\x02\t\x03\x02\x02\x02\x02\v\x03\x02\x02" +
		"\x02\x02\r\x03\x02\x02\x02\x02\x0F\x03\x02\x02\x02\x02\x11\x03\x02\x02" +
		"\x02\x02\x13\x03\x02\x02\x02\x02\x15\x03\x02\x02\x02\x02\x17\x03\x02\x02" +
		"\x02\x02\x19\x03\x02\x02\x02\x02\x1B\x03\x02\x02\x02\x02\x1D\x03\x02\x02" +
		"\x02\x02\x1F\x03\x02\x02\x02\x02!\x03\x02\x02\x02\x02#\x03\x02\x02\x02" +
		"\x02%\x03\x02\x02\x02\x02\'\x03\x02\x02\x02\x02)\x03\x02\x02\x02\x02+" +
		"\x03\x02\x02\x02\x02-\x03\x02\x02\x02\x02/\x03\x02\x02\x02\x021\x03\x02" +
		"\x02\x02\x023\x03\x02\x02\x02\x025\x03\x02\x02\x02\x027\x03\x02\x02\x02" +
		"\x029\x03\x02\x02\x02\x02;\x03\x02\x02\x02\x02=\x03\x02\x02\x02\x02?\x03" +
		"\x02\x02\x02\x02A\x03\x02\x02\x02\x02C\x03\x02\x02\x02\x02E\x03\x02\x02" +
		"\x02\x02G\x03\x02\x02\x02\x02I\x03\x02\x02\x02\x02K\x03\x02\x02\x02\x02" +
		"M\x03\x02\x02\x02\x02O\x03\x02\x02\x02\x02Q\x03\x02\x02\x02\x02S\x03\x02" +
		"\x02\x02\x02U\x03\x02\x02\x02\x02W\x03\x02\x02\x02\x02Y\x03\x02\x02\x02" +
		"\x02[\x03\x02\x02\x02\x02]\x03\x02\x02\x02\x03_\x03\x02\x02\x02\x05a\x03" +
		"\x02\x02\x02\x07c\x03\x02\x02\x02\te\x03\x02\x02\x02\vg\x03\x02\x02\x02" +
		"\ri\x03\x02\x02\x02\x0Fk\x03\x02\x02\x02\x11m\x03\x02\x02\x02\x13o\x03" +
		"\x02\x02\x02\x15q\x03\x02\x02\x02\x17s\x03\x02\x02\x02\x19u\x03\x02\x02" +
		"\x02\x1Bw\x03\x02\x02\x02\x1D{\x03\x02\x02\x02\x1F}\x03\x02\x02\x02!\x85" +
		"\x03\x02\x02\x02#\x87\x03\x02\x02\x02%\x8D\x03\x02\x02\x02\'\x93\x03\x02" +
		"\x02\x02)\x96\x03\x02\x02\x02+\x99\x03\x02\x02\x02-\xA1\x03\x02\x02\x02" +
		"/\xAA\x03\x02\x02\x021\xAE\x03\x02\x02\x023\xB1\x03\x02\x02\x025\xB7\x03" +
		"\x02\x02\x027\xBC\x03\x02\x02\x029\xC6\x03\x02\x02\x02;\xCE\x03\x02\x02" +
		"\x02=\xD5\x03\x02\x02\x02?\xD9\x03\x02\x02\x02A\xE0\x03\x02\x02\x02C\xE7" +
		"\x03\x02\x02\x02E\xF8\x03\x02\x02\x02G\xFD\x03\x02\x02\x02I\xFF\x03\x02" +
		"\x02\x02K\u0109\x03\x02\x02\x02M\u0113\x03\x02\x02\x02O\u011D\x03\x02" +
		"\x02\x02Q\u0122\x03\x02\x02\x02S\u012C\x03\x02\x02\x02U\u012E\x03\x02" +
		"\x02\x02W\u0135\x03\x02\x02\x02Y\u013C\x03\x02\x02\x02[\u0144\x03\x02" +
		"\x02\x02]\u015E\x03\x02\x02\x02_`\x07*\x02\x02`\x04\x03\x02\x02\x02ab" +
		"\x07+\x02\x02b\x06\x03\x02\x02\x02cd\x07}\x02\x02d\b\x03\x02\x02\x02e" +
		"f\x07\x7F\x02\x02f\n\x03\x02\x02\x02gh\x07]\x02\x02h\f\x03\x02\x02\x02" +
		"ij\x07_\x02\x02j\x0E\x03\x02\x02\x02kl\x07>\x02\x02l\x10\x03\x02\x02\x02" +
		"mn\x07@\x02\x02n\x12\x03\x02\x02\x02op\x07<\x02\x02p\x14\x03\x02\x02\x02" +
		"qr\x07.\x02\x02r\x16\x03\x02\x02\x02st\x07(\x02\x02t\x18\x03\x02\x02\x02" +
		"uv\x07~\x02\x02v\x1A\x03\x02\x02\x02wx\x070\x02\x02xy\x070\x02\x02yz\x07" +
		"0\x02\x02z\x1C\x03\x02\x02\x02{|\x070\x02\x02|\x1E\x03\x02\x02\x02}~\x07" +
		")\x02\x02~ \x03\x02\x02\x02\x7F\x81\t\x02\x02\x02\x80\x7F\x03\x02\x02" +
		"\x02\x81\x82\x03\x02\x02\x02\x82\x80\x03\x02\x02\x02\x82\x83\x03\x02\x02" +
		"\x02\x83\x86\x03\x02\x02\x02\x84\x86\x07\x02\x02\x03\x85\x80\x03\x02\x02" +
		"\x02\x85\x84\x03\x02\x02\x02\x86\"\x03\x02\x02\x02\x87\x88\x07m\x02\x02" +
		"\x88\x89\x07g\x02\x02\x89\x8A\x07{\x02\x02\x8A\x8B\x07q\x02\x02\x8B\x8C" +
		"\x07h\x02\x02\x8C$\x03\x02\x02\x02\x8D\x8E\x07k\x02\x02\x8E\x8F\x07p\x02" +
		"\x02\x8F\x90\x07h\x02\x02\x90\x91\x07g\x02\x02\x91\x92\x07t\x02\x02\x92" +
		"&\x03\x02\x02\x02\x93\x94\x07k\x02\x02\x94\x95\x07p\x02\x02\x95(\x03\x02" +
		"\x02\x02\x96\x97\x07c\x02\x02\x97\x98\x07u\x02\x02\x98*\x03\x02\x02\x02" +
		"\x99\x9A\x07g\x02\x02\x9A\x9B\x07z\x02\x02\x9B\x9C\x07v\x02\x02\x9C\x9D" +
		"\x07g\x02\x02\x9D\x9E\x07p\x02\x02\x9E\x9F\x07f\x02\x02\x9F\xA0\x07u\x02" +
		"\x02\xA0,\x03\x02\x02\x02\xA1\xA2\x07g\x02\x02\xA2\xA3\x07z\x02\x02\xA3" +
		"\xA4\x07v\x02\x02\xA4\xA5\x07g\x02\x02\xA5\xA6\x07p\x02\x02\xA6\xA7\x07" +
		"f\x02\x02\xA7\xA8\x07u\x02\x02\xA8\xA9\x07A\x02\x02\xA9.\x03\x02\x02\x02" +
		"\xAA\xAB\x07k\x02\x02\xAB\xAC\x07p\x02\x02\xAC\xAD\x07A\x02\x02\xAD0\x03" +
		"\x02\x02\x02\xAE\xAF\x07k\x02\x02\xAF\xB0\x07h\x02\x02\xB02\x03\x02\x02" +
		"\x02\xB1\xB2\x07p\x02\x02\xB2\xB3\x07g\x02\x02\xB3\xB4\x07x\x02\x02\xB4" +
		"\xB5\x07g\x02\x02\xB5\xB6\x07t\x02\x02\xB64\x03\x02\x02\x02\xB7\xB8\x07" +
		"p\x02\x02\xB8\xB9\x07w\x02\x02\xB9\xBA\x07n\x02\x02\xBA\xBB\x07n\x02\x02" +
		"\xBB6\x03\x02\x02\x02\xBC\xBD\x07w\x02\x02\xBD\xBE\x07p\x02\x02\xBE\xBF" +
		"\x07f\x02\x02\xBF\xC0\x07g\x02\x02\xC0\xC1\x07h\x02\x02\xC1\xC2\x07k\x02" +
		"\x02\xC2\xC3\x07p\x02\x02\xC3\xC4\x07g\x02\x02\xC4\xC5\x07f\x02\x02\xC5" +
		"8\x03\x02\x02\x02\xC6\xC7\x07w\x02\x02\xC7\xC8\x07p\x02\x02\xC8\xC9\x07" +
		"m\x02\x02\xC9\xCA\x07p\x02\x02\xCA\xCB\x07q\x02\x02\xCB\xCC\x07y\x02\x02" +
		"\xCC\xCD\x07p\x02\x02\xCD:\x03\x02\x02\x02\xCE\xCF\x07q\x02\x02\xCF\xD0" +
		"\x07d\x02\x02\xD0\xD1\x07l\x02\x02\xD1\xD2\x07g\x02\x02\xD2\xD3\x07e\x02" +
		"\x02\xD3\xD4\x07v\x02\x02\xD4<\x03\x02\x02\x02\xD5\xD6\x07c\x02\x02\xD6" +
		"\xD7\x07p\x02\x02\xD7\xD8\x07{\x02\x02\xD8>\x03\x02\x02\x02\xD9\xDA\x07" +
		"u\x02\x02\xDA\xDB\x07v\x02\x02\xDB\xDC\x07t\x02\x02\xDC\xDD\x07k\x02\x02" +
		"\xDD\xDE\x07p\x02\x02\xDE\xDF\x07i\x02\x02\xDF@\x03\x02\x02\x02\xE0\xE1" +
		"\x07p\x02\x02\xE1\xE2\x07w\x02\x02\xE2\xE3\x07o\x02\x02\xE3\xE4\x07d\x02" +
		"\x02\xE4\xE5\x07g\x02\x02\xE5\xE6\x07t\x02\x02\xE6B\x03\x02\x02\x02\xE7" +
		"\xE8\x07d\x02\x02\xE8\xE9\x07q\x02\x02\xE9\xEA\x07q\x02\x02\xEA\xEB\x07" +
		"n\x02\x02\xEB\xEC\x07g\x02\x02\xEC\xED\x07c\x02\x02\xED\xEE\x07p\x02\x02" +
		"\xEED\x03\x02\x02\x02\xEF\xF0\x07v\x02\x02\xF0\xF1\x07t\x02\x02\xF1\xF2" +
		"\x07w\x02\x02\xF2\xF9\x07g\x02\x02\xF3\xF4\x07h\x02\x02\xF4\xF5\x07c\x02" +
		"\x02\xF5\xF6\x07n\x02\x02\xF6\xF7\x07u\x02\x02\xF7\xF9\x07g\x02\x02\xF8" +
		"\xEF\x03\x02\x02\x02\xF8\xF3\x03\x02\x02\x02\xF9F\x03\x02\x02\x02\xFA" +
		"\xFE\x05I%\x02\xFB\xFE\x05K&\x02\xFC\xFE\x05M\'\x02\xFD\xFA\x03\x02\x02" +
		"\x02\xFD\xFB\x03\x02\x02\x02\xFD\xFC\x03\x02\x02\x02\xFEH\x03\x02\x02" +
		"\x02\xFF\u0104\x07)\x02\x02\u0100\u0103\x05O(\x02\u0101\u0103\n\x03\x02" +
		"\x02\u0102\u0100\x03\x02\x02\x02\u0102\u0101\x03\x02\x02\x02\u0103\u0106" +
		"\x03\x02\x02\x02\u0104\u0102\x03\x02\x02\x02\u0104\u0105\x03\x02\x02\x02" +
		"\u0105\u0107\x03\x02\x02\x02\u0106\u0104\x03\x02\x02\x02\u0107\u0108\x07" +
		")\x02\x02\u0108J\x03\x02\x02\x02\u0109\u010E\x07$\x02\x02\u010A\u010D" +
		"\x05O(\x02\u010B\u010D\n\x03\x02\x02\u010C\u010A\x03\x02\x02\x02\u010C" +
		"\u010B\x03\x02\x02\x02\u010D\u0110\x03\x02\x02\x02\u010E\u010C\x03\x02" +
		"\x02\x02\u010E\u010F\x03\x02\x02\x02\u010F\u0111\x03\x02\x02\x02\u0110" +
		"\u010E\x03\x02\x02\x02\u0111\u0112\x07$\x02\x02\u0112L\x03\x02\x02\x02" +
		"\u0113\u0118\x07b\x02\x02\u0114\u0117\x05O(\x02\u0115\u0117\n\x03\x02" +
		"\x02\u0116\u0114\x03\x02\x02\x02\u0116\u0115\x03\x02\x02\x02\u0117\u011A" +
		"\x03\x02\x02\x02\u0118\u0116\x03\x02\x02\x02\u0118\u0119\x03\x02\x02\x02" +
		"\u0119\u011B\x03\x02\x02\x02\u011A\u0118\x03\x02\x02\x02\u011B\u011C\x07" +
		"b\x02\x02\u011CN\x03\x02\x02\x02\u011D\u0120\x07^\x02\x02\u011E\u0121" +
		"\t\x04\x02\x02\u011F\u0121\x05Q)\x02\u0120\u011E\x03\x02\x02\x02\u0120" +
		"\u011F\x03\x02\x02\x02\u0121P\x03\x02\x02\x02\u0122\u0123\x07w\x02\x02" +
		"\u0123\u0124\x05U+\x02\u0124\u0125\x05U+\x02\u0125\u0126\x05U+\x02\u0126" +
		"\u0127\x05U+\x02\u0127R\x03\x02\x02\x02\u0128\u012D\x05[.\x02\u0129\u012D" +
		"\x05U+\x02\u012A\u012D\x05W,\x02\u012B\u012D\x05Y-\x02\u012C\u0128\x03" +
		"\x02\x02\x02\u012C\u0129\x03\x02\x02\x02\u012C\u012A\x03\x02\x02\x02\u012C" +
		"\u012B\x03\x02\x02\x02\u012DT\x03\x02\x02\x02\u012E\u012F\x072\x02\x02" +
		"\u012F\u0131\t\x05\x02\x02\u0130\u0132\t\x06\x02\x02\u0131\u0130\x03\x02" +
		"\x02\x02\u0132\u0133\x03\x02\x02\x02\u0133\u0131\x03\x02\x02\x02\u0133" +
		"\u0134\x03\x02\x02\x02\u0134V\x03\x02\x02\x02\u0135\u0136\x072\x02\x02" +
		"\u0136\u0138\t\x07\x02\x02\u0137\u0139\t\b\x02\x02\u0138\u0137\x03\x02" +
		"\x02\x02\u0139\u013A\x03\x02\x02\x02\u013A\u0138\x03\x02\x02\x02\u013A" +
		"\u013B\x03\x02\x02\x02\u013BX\x03\x02\x02\x02\u013C\u013D\x072\x02\x02" +
		"\u013D\u013F\t\t\x02\x02\u013E\u0140\t\n\x02\x02\u013F\u013E\x03\x02\x02" +
		"\x02\u0140\u0141\x03\x02\x02\x02\u0141\u013F\x03\x02\x02\x02\u0141\u0142" +
		"\x03\x02\x02\x02\u0142Z\x03\x02\x02\x02\u0143\u0145\t\b\x02\x02\u0144" +
		"\u0143\x03\x02\x02\x02\u0145\u0146\x03\x02\x02\x02\u0146\u0144\x03\x02" +
		"\x02\x02\u0146\u0147\x03\x02\x02\x02\u0147\u014E\x03\x02\x02\x02\u0148" +
		"\u014A\x070\x02\x02\u0149\u014B\t\b\x02\x02\u014A\u0149\x03\x02\x02\x02" +
		"\u014B\u014C\x03\x02\x02\x02\u014C\u014A\x03\x02\x02\x02\u014C\u014D\x03" +
		"\x02\x02\x02\u014D\u014F\x03\x02\x02\x02\u014E\u0148\x03\x02\x02\x02\u014E" +
		"\u014F\x03\x02\x02\x02\u014F\\\x03\x02\x02\x02\u0150\u0154\t\v\x02\x02" +
		"\u0151\u0153\t\f\x02\x02\u0152\u0151\x03\x02\x02\x02\u0153\u0156\x03\x02" +
		"\x02\x02\u0154\u0152\x03\x02\x02\x02\u0154\u0155\x03\x02\x02\x02\u0155" +
		"\u0158\x03\x02\x02\x02\u0156\u0154\x03\x02\x02\x02\u0157\u0159\x07A\x02" +
		"\x02\u0158\u0157\x03\x02\x02\x02\u0158\u0159\x03\x02\x02\x02\u0159\u015F" +
		"\x03\x02\x02\x02\u015A\u015B\x07?\x02\x02\u015B\u015F\x07A\x02\x02\u015C" +
		"\u015D\x07A\x02\x02\u015D\u015F\x07?\x02\x02\u015E\u0150\x03\x02\x02\x02" +
		"\u015E\u015A\x03\x02\x02\x02\u015E\u015C\x03\x02\x02\x02\u015F^\x03\x02" +
		"\x02\x02\x18\x02\x82\x85\xF8\xFD\u0102\u0104\u010C\u010E\u0116\u0118\u0120" +
		"\u012C\u0133\u013A\u0141\u0146\u014C\u014E\u0154\u0158\u015E\x02";
	public static __ATN: ATN;
	public static get _ATN(): ATN {
		if (!TypeSchemeLexer.__ATN) {
			TypeSchemeLexer.__ATN = new ATNDeserializer().deserialize(Utils.toCharArray(TypeSchemeLexer._serializedATN));
		}

		return TypeSchemeLexer.__ATN;
	}

}

