// Generated from ./grammar/TypeSchemeLexer.g4 by ANTLR 4.9.0-SNAPSHOT


import { ATN } from "antlr4ts/atn/ATN";
import { ATNDeserializer } from "antlr4ts/atn/ATNDeserializer";
import { CharStream } from "antlr4ts/CharStream";
import { Lexer } from "antlr4ts/Lexer";
import { LexerATNSimulator } from "antlr4ts/atn/LexerATNSimulator";
import { NotNull } from "antlr4ts/Decorators";
import { Override } from "antlr4ts/Decorators";
import { RuleContext } from "antlr4ts/RuleContext";
import { Vocabulary } from "antlr4ts/Vocabulary";
import { VocabularyImpl } from "antlr4ts/VocabularyImpl";

import * as Utils from "antlr4ts/misc/Utils";


export class TypeSchemeLexer extends Lexer {
	public static readonly LPAREN = 1;
	public static readonly RPAREN = 2;
	public static readonly LBRACE = 3;
	public static readonly RBRACE = 4;
	public static readonly LBRACK = 5;
	public static readonly RBRACK = 6;
	public static readonly LANGL = 7;
	public static readonly RANGL = 8;
	public static readonly EQUALS = 9;
	public static readonly NEQ = 10;
	public static readonly COLON = 11;
	public static readonly COMMA = 12;
	public static readonly SPREAD = 13;
	public static readonly DOT = 14;
	public static readonly WS = 15;
	public static readonly KEYOF = 16;
	public static readonly INFER = 17;
	public static readonly IN = 18;
	public static readonly AS = 19;
	public static readonly EXTENDS = 20;
	public static readonly EXTENDS_Q = 21;
	public static readonly IN_Q = 22;
	public static readonly IF = 23;
	public static readonly NEVER = 24;
	public static readonly NULL = 25;
	public static readonly UNDEFINED = 26;
	public static readonly UNKNOWN = 27;
	public static readonly OBJECT = 28;
	public static readonly ANY = 29;
	public static readonly STRING = 30;
	public static readonly NUMBER = 31;
	public static readonly BOOLEAN = 32;
	public static readonly BooleanLiteral = 33;
	public static readonly StringLiteral = 34;
	public static readonly SingleQuotedStringLiteral = 35;
	public static readonly DoubleQuotedStringLiteral = 36;
	public static readonly BacktickStringLiteral = 37;
	public static readonly EscapeSequence = 38;
	public static readonly UnicodeEscapeSequence = 39;
	public static readonly NumberLiteral = 40;
	public static readonly HexLiteral = 41;
	public static readonly OctalLiteral = 42;
	public static readonly BinaryLiteral = 43;
	public static readonly DecimalLiteral = 44;
	public static readonly Identifier = 45;

	// tslint:disable:no-trailing-whitespace
	public static readonly channelNames: string[] = [
		"DEFAULT_TOKEN_CHANNEL", "HIDDEN",
	];

	// tslint:disable:no-trailing-whitespace
	public static readonly modeNames: string[] = [
		"DEFAULT_MODE",
	];

	public static readonly ruleNames: string[] = [
		"LPAREN", "RPAREN", "LBRACE", "RBRACE", "LBRACK", "RBRACK", "LANGL", "RANGL", 
		"EQUALS", "NEQ", "COLON", "COMMA", "SPREAD", "DOT", "WS", "KEYOF", "INFER", 
		"IN", "AS", "EXTENDS", "EXTENDS_Q", "IN_Q", "IF", "NEVER", "NULL", "UNDEFINED", 
		"UNKNOWN", "OBJECT", "ANY", "STRING", "NUMBER", "BOOLEAN", "BooleanLiteral", 
		"StringLiteral", "SingleQuotedStringLiteral", "DoubleQuotedStringLiteral", 
		"BacktickStringLiteral", "EscapeSequence", "UnicodeEscapeSequence", "NumberLiteral", 
		"HexLiteral", "OctalLiteral", "BinaryLiteral", "DecimalLiteral", "Identifier",
	];

	private static readonly _LITERAL_NAMES: Array<string | undefined> = [
		undefined, "'('", "')'", "'{'", "'}'", "'['", "']'", "'<'", "'>'", "'='", 
		"'!='", "':'", "','", "'...'", "'.'", undefined, "'keyof'", "'infer'", 
		"'in'", "'as'", "'extends'", "'extends?'", "'in?'", "'if'", "'never'", 
		"'null'", "'undefined'", "'unknown'", "'object'", "'any'", "'string'", 
		"'number'", "'boolean'",
	];
	private static readonly _SYMBOLIC_NAMES: Array<string | undefined> = [
		undefined, "LPAREN", "RPAREN", "LBRACE", "RBRACE", "LBRACK", "RBRACK", 
		"LANGL", "RANGL", "EQUALS", "NEQ", "COLON", "COMMA", "SPREAD", "DOT", 
		"WS", "KEYOF", "INFER", "IN", "AS", "EXTENDS", "EXTENDS_Q", "IN_Q", "IF", 
		"NEVER", "NULL", "UNDEFINED", "UNKNOWN", "OBJECT", "ANY", "STRING", "NUMBER", 
		"BOOLEAN", "BooleanLiteral", "StringLiteral", "SingleQuotedStringLiteral", 
		"DoubleQuotedStringLiteral", "BacktickStringLiteral", "EscapeSequence", 
		"UnicodeEscapeSequence", "NumberLiteral", "HexLiteral", "OctalLiteral", 
		"BinaryLiteral", "DecimalLiteral", "Identifier",
	];
	public static readonly VOCABULARY: Vocabulary = new VocabularyImpl(TypeSchemeLexer._LITERAL_NAMES, TypeSchemeLexer._SYMBOLIC_NAMES, []);

	// @Override
	// @NotNull
	public get vocabulary(): Vocabulary {
		return TypeSchemeLexer.VOCABULARY;
	}
	// tslint:enable:no-trailing-whitespace


	constructor(input: CharStream) {
		super(input);
		this._interp = new LexerATNSimulator(TypeSchemeLexer._ATN, this);
	}

	// @Override
	public get grammarFileName(): string { return "TypeSchemeLexer.g4"; }

	// @Override
	public get ruleNames(): string[] { return TypeSchemeLexer.ruleNames; }

	// @Override
	public get serializedATN(): string { return TypeSchemeLexer._serializedATN; }

	// @Override
	public get channelNames(): string[] { return TypeSchemeLexer.channelNames; }

	// @Override
	public get modeNames(): string[] { return TypeSchemeLexer.modeNames; }

	public static readonly _serializedATN: string =
		"\x03\uC91D\uCABA\u058D\uAFBA\u4F53\u0607\uEA8B\uC241\x02/\u014A\b\x01" +
		"\x04\x02\t\x02\x04\x03\t\x03\x04\x04\t\x04\x04\x05\t\x05\x04\x06\t\x06" +
		"\x04\x07\t\x07\x04\b\t\b\x04\t\t\t\x04\n\t\n\x04\v\t\v\x04\f\t\f\x04\r" +
		"\t\r\x04\x0E\t\x0E\x04\x0F\t\x0F\x04\x10\t\x10\x04\x11\t\x11\x04\x12\t" +
		"\x12\x04\x13\t\x13\x04\x14\t\x14\x04\x15\t\x15\x04\x16\t\x16\x04\x17\t" +
		"\x17\x04\x18\t\x18\x04\x19\t\x19\x04\x1A\t\x1A\x04\x1B\t\x1B\x04\x1C\t" +
		"\x1C\x04\x1D\t\x1D\x04\x1E\t\x1E\x04\x1F\t\x1F\x04 \t \x04!\t!\x04\"\t" +
		"\"\x04#\t#\x04$\t$\x04%\t%\x04&\t&\x04\'\t\'\x04(\t(\x04)\t)\x04*\t*\x04" +
		"+\t+\x04,\t,\x04-\t-\x04.\t.\x03\x02\x03\x02\x03\x03\x03\x03\x03\x04\x03" +
		"\x04\x03\x05\x03\x05\x03\x06\x03\x06\x03\x07\x03\x07\x03\b\x03\b\x03\t" +
		"\x03\t\x03\n\x03\n\x03\v\x03\v\x03\v\x03\f\x03\f\x03\r\x03\r\x03\x0E\x03" +
		"\x0E\x03\x0E\x03\x0E\x03\x0F\x03\x0F\x03\x10\x06\x10~\n\x10\r\x10\x0E" +
		"\x10\x7F\x03\x10\x03\x10\x03\x11\x03\x11\x03\x11\x03\x11\x03\x11\x03\x11" +
		"\x03\x12\x03\x12\x03\x12\x03\x12\x03\x12\x03\x12\x03\x13\x03\x13\x03\x13" +
		"\x03\x14\x03\x14\x03\x14\x03\x15\x03\x15\x03\x15\x03\x15\x03\x15\x03\x15" +
		"\x03\x15\x03\x15\x03\x16\x03\x16\x03\x16\x03\x16\x03\x16\x03\x16\x03\x16" +
		"\x03\x16\x03\x16\x03\x17\x03\x17\x03\x17\x03\x17\x03\x18\x03\x18\x03\x18" +
		"\x03\x19\x03\x19\x03\x19\x03\x19\x03\x19\x03\x19\x03\x1A\x03\x1A\x03\x1A" +
		"\x03\x1A\x03\x1A\x03\x1B\x03\x1B\x03\x1B\x03\x1B\x03\x1B\x03\x1B\x03\x1B" +
		"\x03\x1B\x03\x1B\x03\x1B\x03\x1C\x03\x1C\x03\x1C\x03\x1C\x03\x1C\x03\x1C" +
		"\x03\x1C\x03\x1C\x03\x1D\x03\x1D\x03\x1D\x03\x1D\x03\x1D\x03\x1D\x03\x1D" +
		"\x03\x1E\x03\x1E\x03\x1E\x03\x1E\x03\x1F\x03\x1F\x03\x1F\x03\x1F\x03\x1F" +
		"\x03\x1F\x03\x1F\x03 \x03 \x03 \x03 \x03 \x03 \x03 \x03!\x03!\x03!\x03" +
		"!\x03!\x03!\x03!\x03!\x03\"\x03\"\x03\"\x03\"\x03\"\x03\"\x03\"\x03\"" +
		"\x03\"\x05\"\xF5\n\"\x03#\x03#\x03#\x05#\xFA\n#\x03$\x03$\x03$\x05$\xFF" +
		"\n$\x03$\x03$\x03%\x03%\x03%\x05%\u0106\n%\x03%\x03%\x03&\x03&\x03&\x05" +
		"&\u010D\n&\x03&\x03&\x03\'\x03\'\x03\'\x05\'\u0114\n\'\x03(\x03(\x03(" +
		"\x03(\x03(\x03(\x03)\x03)\x03)\x03)\x05)\u0120\n)\x03*\x03*\x03*\x06*" +
		"\u0125\n*\r*\x0E*\u0126\x03+\x03+\x03+\x06+\u012C\n+\r+\x0E+\u012D\x03" +
		",\x03,\x03,\x06,\u0133\n,\r,\x0E,\u0134\x03-\x06-\u0138\n-\r-\x0E-\u0139" +
		"\x03-\x03-\x06-\u013E\n-\r-\x0E-\u013F\x05-\u0142\n-\x03.\x03.\x07.\u0146" +
		"\n.\f.\x0E.\u0149\v.\x02\x02\x02/\x03\x02\x03\x05\x02\x04\x07\x02\x05" +
		"\t\x02\x06\v\x02\x07\r\x02\b\x0F\x02\t\x11\x02\n\x13\x02\v\x15\x02\f\x17" +
		"\x02\r\x19\x02\x0E\x1B\x02\x0F\x1D\x02\x10\x1F\x02\x11!\x02\x12#\x02\x13" +
		"%\x02\x14\'\x02\x15)\x02\x16+\x02\x17-\x02\x18/\x02\x191\x02\x1A3\x02" +
		"\x1B5\x02\x1C7\x02\x1D9\x02\x1E;\x02\x1F=\x02 ?\x02!A\x02\"C\x02#E\x02" +
		"$G\x02%I\x02&K\x02\'M\x02(O\x02)Q\x02*S\x02+U\x02,W\x02-Y\x02.[\x02/\x03" +
		"\x02\r\x05\x02\v\f\x0F\x0F\"\"\x05\x02$$))^^\n\x02$$11^^ddhhppttvv\x04" +
		"\x02ZZzz\x05\x022;CHch\x04\x02QQqq\x03\x022;\x04\x02DDdd\x03\x0223\x06" +
		"\x02&&C\\aac|\x07\x02&&2;C\\aac|\x02\u015B\x02\x03\x03\x02\x02\x02\x02" +
		"\x05\x03\x02\x02\x02\x02\x07\x03\x02\x02\x02\x02\t\x03\x02\x02\x02\x02" +
		"\v\x03\x02\x02\x02\x02\r\x03\x02\x02\x02\x02\x0F\x03\x02\x02\x02\x02\x11" +
		"\x03\x02\x02\x02\x02\x13\x03\x02\x02\x02\x02\x15\x03\x02\x02\x02\x02\x17" +
		"\x03\x02\x02\x02\x02\x19\x03\x02\x02\x02\x02\x1B\x03\x02\x02\x02\x02\x1D" +
		"\x03\x02\x02\x02\x02\x1F\x03\x02\x02\x02\x02!\x03\x02\x02\x02\x02#\x03" +
		"\x02\x02\x02\x02%\x03\x02\x02\x02\x02\'\x03\x02\x02\x02\x02)\x03\x02\x02" +
		"\x02\x02+\x03\x02\x02\x02\x02-\x03\x02\x02\x02\x02/\x03\x02\x02\x02\x02" +
		"1\x03\x02\x02\x02\x023\x03\x02\x02\x02\x025\x03\x02\x02\x02\x027\x03\x02" +
		"\x02\x02\x029\x03\x02\x02\x02\x02;\x03\x02\x02\x02\x02=\x03\x02\x02\x02" +
		"\x02?\x03\x02\x02\x02\x02A\x03\x02\x02\x02\x02C\x03\x02\x02\x02\x02E\x03" +
		"\x02\x02\x02\x02G\x03\x02\x02\x02\x02I\x03\x02\x02\x02\x02K\x03\x02\x02" +
		"\x02\x02M\x03\x02\x02\x02\x02O\x03\x02\x02\x02\x02Q\x03\x02\x02\x02\x02" +
		"S\x03\x02\x02\x02\x02U\x03\x02\x02\x02\x02W\x03\x02\x02\x02\x02Y\x03\x02" +
		"\x02\x02\x02[\x03\x02\x02\x02\x03]\x03\x02\x02\x02\x05_\x03\x02\x02\x02" +
		"\x07a\x03\x02\x02\x02\tc\x03\x02\x02\x02\ve\x03\x02\x02\x02\rg\x03\x02" +
		"\x02\x02\x0Fi\x03\x02\x02\x02\x11k\x03\x02\x02\x02\x13m\x03\x02\x02\x02" +
		"\x15o\x03\x02\x02\x02\x17r\x03\x02\x02\x02\x19t\x03\x02\x02\x02\x1Bv\x03" +
		"\x02\x02\x02\x1Dz\x03\x02\x02\x02\x1F}\x03\x02\x02\x02!\x83\x03\x02\x02" +
		"\x02#\x89\x03\x02\x02\x02%\x8F\x03\x02\x02\x02\'\x92\x03\x02\x02\x02)" +
		"\x95\x03\x02\x02\x02+\x9D\x03\x02\x02\x02-\xA6\x03\x02\x02\x02/\xAA\x03" +
		"\x02\x02\x021\xAD\x03\x02\x02\x023\xB3\x03\x02\x02\x025\xB8\x03\x02\x02" +
		"\x027\xC2\x03\x02\x02\x029\xCA\x03\x02\x02\x02;\xD1\x03\x02\x02\x02=\xD5" +
		"\x03\x02\x02\x02?\xDC\x03\x02\x02\x02A\xE3\x03\x02\x02\x02C\xF4\x03\x02" +
		"\x02\x02E\xF9\x03\x02\x02\x02G\xFB\x03\x02\x02\x02I\u0102\x03\x02\x02" +
		"\x02K\u0109\x03\x02\x02\x02M\u0110\x03\x02\x02\x02O\u0115\x03\x02\x02" +
		"\x02Q\u011F\x03\x02\x02\x02S\u0121\x03\x02\x02\x02U\u0128\x03\x02\x02" +
		"\x02W\u012F\x03\x02\x02\x02Y\u0137\x03\x02\x02\x02[\u0143\x03\x02\x02" +
		"\x02]^\x07*\x02\x02^\x04\x03\x02\x02\x02_`\x07+\x02\x02`\x06\x03\x02\x02" +
		"\x02ab\x07}\x02\x02b\b\x03\x02\x02\x02cd\x07\x7F\x02\x02d\n\x03\x02\x02" +
		"\x02ef\x07]\x02\x02f\f\x03\x02\x02\x02gh\x07_\x02\x02h\x0E\x03\x02\x02" +
		"\x02ij\x07>\x02\x02j\x10\x03\x02\x02\x02kl\x07@\x02\x02l\x12\x03\x02\x02" +
		"\x02mn\x07?\x02\x02n\x14\x03\x02\x02\x02op\x07#\x02\x02pq\x07?\x02\x02" +
		"q\x16\x03\x02\x02\x02rs\x07<\x02\x02s\x18\x03\x02\x02\x02tu\x07.\x02\x02" +
		"u\x1A\x03\x02\x02\x02vw\x070\x02\x02wx\x070\x02\x02xy\x070\x02\x02y\x1C" +
		"\x03\x02\x02\x02z{\x070\x02\x02{\x1E\x03\x02\x02\x02|~\t\x02\x02\x02}" +
		"|\x03\x02\x02\x02~\x7F\x03\x02\x02\x02\x7F}\x03\x02\x02\x02\x7F\x80\x03" +
		"\x02\x02\x02\x80\x81\x03\x02\x02\x02\x81\x82\b\x10\x02\x02\x82 \x03\x02" +
		"\x02\x02\x83\x84\x07m\x02\x02\x84\x85\x07g\x02\x02\x85\x86\x07{\x02\x02" +
		"\x86\x87\x07q\x02\x02\x87\x88\x07h\x02\x02\x88\"\x03\x02\x02\x02\x89\x8A" +
		"\x07k\x02\x02\x8A\x8B\x07p\x02\x02\x8B\x8C\x07h\x02\x02\x8C\x8D\x07g\x02" +
		"\x02\x8D\x8E\x07t\x02\x02\x8E$\x03\x02\x02\x02\x8F\x90\x07k\x02\x02\x90" +
		"\x91\x07p\x02\x02\x91&\x03\x02\x02\x02\x92\x93\x07c\x02\x02\x93\x94\x07" +
		"u\x02\x02\x94(\x03\x02\x02\x02\x95\x96\x07g\x02\x02\x96\x97\x07z\x02\x02" +
		"\x97\x98\x07v\x02\x02\x98\x99\x07g\x02\x02\x99\x9A\x07p\x02\x02\x9A\x9B" +
		"\x07f\x02\x02\x9B\x9C\x07u\x02\x02\x9C*\x03\x02\x02\x02\x9D\x9E\x07g\x02" +
		"\x02\x9E\x9F\x07z\x02\x02\x9F\xA0\x07v\x02\x02\xA0\xA1\x07g\x02\x02\xA1" +
		"\xA2\x07p\x02\x02\xA2\xA3\x07f\x02\x02\xA3\xA4\x07u\x02\x02\xA4\xA5\x07" +
		"A\x02\x02\xA5,\x03\x02\x02\x02\xA6\xA7\x07k\x02\x02\xA7\xA8\x07p\x02\x02" +
		"\xA8\xA9\x07A\x02\x02\xA9.\x03\x02\x02\x02\xAA\xAB\x07k\x02\x02\xAB\xAC" +
		"\x07h\x02\x02\xAC0\x03\x02\x02\x02\xAD\xAE\x07p\x02\x02\xAE\xAF\x07g\x02" +
		"\x02\xAF\xB0\x07x\x02\x02\xB0\xB1\x07g\x02\x02\xB1\xB2\x07t\x02\x02\xB2" +
		"2\x03\x02\x02\x02\xB3\xB4\x07p\x02\x02\xB4\xB5\x07w\x02\x02\xB5\xB6\x07" +
		"n\x02\x02\xB6\xB7\x07n\x02\x02\xB74\x03\x02\x02\x02\xB8\xB9\x07w\x02\x02" +
		"\xB9\xBA\x07p\x02\x02\xBA\xBB\x07f\x02\x02\xBB\xBC\x07g\x02\x02\xBC\xBD" +
		"\x07h\x02\x02\xBD\xBE\x07k\x02\x02\xBE\xBF\x07p\x02\x02\xBF\xC0\x07g\x02" +
		"\x02\xC0\xC1\x07f\x02\x02\xC16\x03\x02\x02\x02\xC2\xC3\x07w\x02\x02\xC3" +
		"\xC4\x07p\x02\x02\xC4\xC5\x07m\x02\x02\xC5\xC6\x07p\x02\x02\xC6\xC7\x07" +
		"q\x02\x02\xC7\xC8\x07y\x02\x02\xC8\xC9\x07p\x02\x02\xC98\x03\x02\x02\x02" +
		"\xCA\xCB\x07q\x02\x02\xCB\xCC\x07d\x02\x02\xCC\xCD\x07l\x02\x02\xCD\xCE" +
		"\x07g\x02\x02\xCE\xCF\x07e\x02\x02\xCF\xD0\x07v\x02\x02\xD0:\x03\x02\x02" +
		"\x02\xD1\xD2\x07c\x02\x02\xD2\xD3\x07p\x02\x02\xD3\xD4\x07{\x02\x02\xD4" +
		"<\x03\x02\x02\x02\xD5\xD6\x07u\x02\x02\xD6\xD7\x07v\x02\x02\xD7\xD8\x07" +
		"t\x02\x02\xD8\xD9\x07k\x02\x02\xD9\xDA\x07p\x02\x02\xDA\xDB\x07i\x02\x02" +
		"\xDB>\x03\x02\x02\x02\xDC\xDD\x07p\x02\x02\xDD\xDE\x07w\x02\x02\xDE\xDF" +
		"\x07o\x02\x02\xDF\xE0\x07d\x02\x02\xE0\xE1\x07g\x02\x02\xE1\xE2\x07t\x02" +
		"\x02\xE2@\x03\x02\x02\x02\xE3\xE4\x07d\x02\x02\xE4\xE5\x07q\x02\x02\xE5" +
		"\xE6\x07q\x02\x02\xE6\xE7\x07n\x02\x02\xE7\xE8\x07g\x02\x02\xE8\xE9\x07" +
		"c\x02\x02\xE9\xEA\x07p\x02\x02\xEAB\x03\x02\x02\x02\xEB\xEC\x07v\x02\x02" +
		"\xEC\xED\x07t\x02\x02\xED\xEE\x07w\x02\x02\xEE\xF5\x07g\x02\x02\xEF\xF0" +
		"\x07h\x02\x02\xF0\xF1\x07c\x02\x02\xF1\xF2\x07n\x02\x02\xF2\xF3\x07u\x02" +
		"\x02\xF3\xF5\x07g\x02\x02\xF4\xEB\x03\x02\x02\x02\xF4\xEF\x03\x02\x02" +
		"\x02\xF5D\x03\x02\x02\x02\xF6\xFA\x05G$\x02\xF7\xFA\x05I%\x02\xF8\xFA" +
		"\x05K&\x02\xF9\xF6\x03\x02\x02\x02\xF9\xF7\x03\x02\x02\x02\xF9\xF8\x03" +
		"\x02\x02\x02\xFAF\x03\x02\x02\x02\xFB\xFE\x07)\x02\x02\xFC\xFF\x05M\'" +
		"\x02\xFD\xFF\n\x03\x02\x02\xFE\xFC\x03\x02\x02\x02\xFE\xFD\x03\x02\x02" +
		"\x02\xFF\u0100\x03\x02\x02\x02\u0100\u0101\x07)\x02\x02\u0101H\x03\x02" +
		"\x02\x02\u0102\u0105\x07$\x02\x02\u0103\u0106\x05M\'\x02\u0104\u0106\n" +
		"\x03\x02\x02\u0105\u0103\x03\x02\x02\x02\u0105\u0104\x03\x02\x02\x02\u0106" +
		"\u0107\x03\x02\x02\x02\u0107\u0108\x07$\x02\x02\u0108J\x03\x02\x02\x02" +
		"\u0109\u010C\x07b\x02\x02\u010A\u010D\x05M\'\x02\u010B\u010D\n\x03\x02" +
		"\x02\u010C\u010A\x03\x02\x02\x02\u010C\u010B\x03\x02\x02\x02\u010D\u010E" +
		"\x03\x02\x02\x02\u010E\u010F\x07b\x02\x02\u010FL\x03\x02\x02\x02\u0110" +
		"\u0113\x07^\x02\x02\u0111\u0114\t\x04\x02\x02\u0112\u0114\x05O(\x02\u0113" +
		"\u0111\x03\x02\x02\x02\u0113\u0112\x03\x02\x02\x02\u0114N\x03\x02\x02" +
		"\x02\u0115\u0116\x07w\x02\x02\u0116\u0117\x05S*\x02\u0117\u0118\x05S*" +
		"\x02\u0118\u0119\x05S*\x02\u0119\u011A\x05S*\x02\u011AP\x03\x02\x02\x02" +
		"\u011B\u0120\x05Y-\x02\u011C\u0120\x05S*\x02\u011D\u0120\x05U+\x02\u011E" +
		"\u0120\x05W,\x02\u011F\u011B\x03\x02\x02\x02\u011F\u011C\x03\x02\x02\x02" +
		"\u011F\u011D\x03\x02\x02\x02\u011F\u011E\x03\x02\x02\x02\u0120R\x03\x02" +
		"\x02\x02\u0121\u0122\x072\x02\x02\u0122\u0124\t\x05\x02\x02\u0123\u0125" +
		"\t\x06\x02\x02\u0124\u0123\x03\x02\x02\x02\u0125\u0126\x03\x02\x02\x02" +
		"\u0126\u0124\x03\x02\x02\x02\u0126\u0127\x03\x02\x02\x02\u0127T\x03\x02" +
		"\x02\x02\u0128\u0129\x072\x02\x02\u0129\u012B\t\x07\x02\x02\u012A\u012C" +
		"\t\b\x02\x02\u012B\u012A\x03\x02\x02\x02\u012C\u012D\x03\x02\x02\x02\u012D" +
		"\u012B\x03\x02\x02\x02\u012D\u012E\x03\x02\x02\x02\u012EV\x03\x02\x02" +
		"\x02\u012F\u0130\x072\x02\x02\u0130\u0132\t\t\x02\x02\u0131\u0133\t\n" +
		"\x02\x02\u0132\u0131\x03\x02\x02\x02\u0133\u0134\x03\x02\x02\x02\u0134" +
		"\u0132\x03\x02\x02\x02\u0134\u0135\x03\x02\x02\x02\u0135X\x03\x02\x02" +
		"\x02\u0136\u0138\t\b\x02\x02\u0137\u0136\x03\x02\x02\x02\u0138\u0139\x03" +
		"\x02\x02\x02\u0139\u0137\x03\x02\x02\x02\u0139\u013A\x03\x02\x02\x02\u013A" +
		"\u0141\x03\x02\x02\x02\u013B\u013D\x070\x02\x02\u013C\u013E\t\b\x02\x02" +
		"\u013D\u013C\x03\x02\x02\x02\u013E\u013F\x03\x02\x02\x02\u013F\u013D\x03" +
		"\x02\x02\x02\u013F\u0140\x03\x02\x02\x02\u0140\u0142\x03\x02\x02\x02\u0141" +
		"\u013B\x03\x02\x02\x02\u0141\u0142\x03\x02\x02\x02\u0142Z\x03\x02\x02" +
		"\x02\u0143\u0147\t\v\x02\x02\u0144\u0146\t\f\x02\x02\u0145\u0144\x03\x02" +
		"\x02\x02\u0146\u0149\x03\x02\x02\x02\u0147\u0145\x03\x02\x02\x02\u0147" +
		"\u0148\x03\x02\x02\x02\u0148\\\x03\x02\x02\x02\u0149\u0147\x03\x02\x02" +
		"\x02\x12\x02\x7F\xF4\xF9\xFE\u0105\u010C\u0113\u011F\u0126\u012D\u0134" +
		"\u0139\u013F\u0141\u0147\x03\b\x02\x02";
	public static __ATN: ATN;
	public static get _ATN(): ATN {
		if (!TypeSchemeLexer.__ATN) {
			TypeSchemeLexer.__ATN = new ATNDeserializer().deserialize(Utils.toCharArray(TypeSchemeLexer._serializedATN));
		}

		return TypeSchemeLexer.__ATN;
	}

}

